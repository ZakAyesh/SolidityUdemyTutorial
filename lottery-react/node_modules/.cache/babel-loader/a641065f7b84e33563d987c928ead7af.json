{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Quantum/SolidityUdemyTutorial/lottery-react/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      manager: \"\",\n      players: [],\n      balance: \"\",\n      value: \"\",\n      message: \"\",\n      lastWinner: \"\"\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"Here are the accounts: \", accounts);\n      this.setState({\n        message: \"Waiting on transaction success....\"\n      });\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, \"ether\")\n      });\n      this.setState({\n        message: \"You have been entered! \"\n      });\n    };\n\n    this.onClick = async event => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: \"Waiting on transaction success....\"\n      });\n      await lottery.methods.pickWinner().send({\n        from: accounts[0]\n      });\n      this.setState({\n        message: `A winner has been picked!: The winner is ${this.LastWinner}`\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const lastWinner = await web3.eth.lastWinner().call();\n    this.setState({\n      manager,\n      players,\n      balance\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lottery Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"This contract is managed by \", this.state.manager, \"There are currently \", this.state.players.length, \" people entered, competing to win \", web3.utils.fromWei(this.state.balance, \"ether\"), \" \", \"ether!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Want to try your luck?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount of ether to enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.value,\n            onChange: event => this.setState({\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ready to pick a winner?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onClick,\n        children: \"Pick a winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Quantum/SolidityUdemyTutorial/lottery-react/src/App.js"],"names":["React","Component","web3","lottery","App","state","manager","players","balance","value","message","lastWinner","onSubmit","event","preventDefault","accounts","eth","getAccounts","console","log","setState","methods","enter","send","from","utils","toWei","onClick","pickWinner","LastWinner","componentDidMount","call","getPlayers","getBalance","options","address","render","length","fromWei","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\n\nclass App extends Component {\n  state = {\n    manager: \"\",\n    players: [],\n    balance: \"\",\n    value: \"\",\n    message: \"\",\n    lastWinner: \"\",\n  };\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const lastWinner = await web3.eth.lastWinner().call();\n\n    this.setState({ manager, players, balance });\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    console.log(\"Here are the accounts: \", accounts);\n\n    this.setState({ message: \"Waiting on transaction success....\" });\n\n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, \"ether\"),\n    });\n\n    this.setState({ message: \"You have been entered! \" });\n  };\n\n  onClick = async (event) => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: \"Waiting on transaction success....\" });\n\n    await lottery.methods.pickWinner().send({\n      from: accounts[0],\n    });\n\n    this.setState({\n      message: `A winner has been picked!: The winner is ${this.LastWinner}`,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Lottery Contract</h2>\n        <p>\n          {\" \"}\n          This contract is managed by {this.state.manager}\n          There are currently {this.state.players.length} people entered,\n          competing to win {web3.utils.fromWei(this.state.balance, \"ether\")}{\" \"}\n          ether!\n        </p>\n\n        <hr />\n\n        <form onSubmit={this.onSubmit}>\n          <h4>Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input\n              value={this.state.value}\n              onChange={(event) => this.setState({ value: event.target.value })}\n            />\n            <button>Enter</button>\n          </div>\n        </form>\n\n        <hr />\n\n        <h4>Ready to pick a winner?</h4>\n        <button onClick={this.onClick}>Pick a winner</button>\n\n        <hr />\n\n        <h1>{this.state.message}</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}